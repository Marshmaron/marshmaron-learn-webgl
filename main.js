// 必要なもの
// scene（シーン）：ステージのようなもの。例えば俳優が撮影するにはその撮影場所やセットが必要。
// camera（カメラ）：撮影するにはカメラが必要。
// lenderer（レンダラー）：レンダリングをする時に必要。例えば撮ったものを実際にテレビに映さないといけない。
// object：実際に描画したいもの。例としては演者。今回はcube（立方体として描画）

// ==========================
// 初期設定用の変数を定義
// ==========================
let scene, camera, renderer, cube;

// ==========================
// 初期設定の関数
// ==========================
// シーン、カメラ、レンダラーなどを正しく設定するために一度初期化をする
// 初期化段階でシーン（ステージ）にオブ杖くと（演者）を追加するため
const init = () => {
    // シーンを作成

    // カメラを作成
    // カメラには視野角、アスペクト比、近くのクリッピング面、遠くのクリッピング面を指定

    // レンダラーを作成

    // オブジェクトの作成

    // 描画
    // ジオメトリとマテリアルからメッシュを作成
    // メッシュ：ジオメトリ（形状）とマテリアル（表面の見た目）を組み合わせたもの。例えば、演者が特定の衣装を着ている状態。
    // ジオメトリ：演者の体格や形状（立方体など）。
    // マテリアル：演者が着ている衣装や肌の見た目（色やテクスチャ）。


    // メッシュをシーンに追加：演者が衣装を着た状態のものをステージ（シーン）に配置すること。

}


// アニメーション制御
const animate = () => {
    // 次のフレームの描画をリクエスト

    // 動きの作成
    // フレームごとに立方体を少しずつ回転させる

    // シーンをカメラから見た視点でレンダリング

}

// ウィンドウ幅変更時、サイズを維持する処理
const windowResize = () => {
    // カメラのアスペクト比を新しいウィンドウのサイズに更新

    // カメラの投影行列を更新

    // レンダラーのサイズを新しいウィンドウのサイズに更新
}

// ==========================
// 実行
// ==========================
// イベントリスナーを追加して、ウィンドウのサイズが変更された時にwindowResize関数を呼び出す
// 特定のイベントに対して関数を実行できる
// window.addEventListener("resize", windowResize);

// 初期化関数を実行
// init();

// アニメーション制御関数を実行
// animate();




